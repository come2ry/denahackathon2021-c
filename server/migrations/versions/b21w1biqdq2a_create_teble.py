"""“init”

Revision ID: a5a91978daa5
Revises:
Create Date: 2021-09-19 03:58:50.478565

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
import geoalchemy2 as ga

from sqlalchemy import func
from sqlalchemy.types import UserDefinedType


class Geometry(UserDefinedType):
    def get_col_spec(self):
        return 'GEOMETRY'

    def bind_expression(self, bindvalue):
        return func.ST_GeomFromText(bindvalue, type_=self)

    def column_expression(self, col):
        return func.ST_AsText(col, type_=self)


# revision identifiers, used by Alembic.
revision = 'b21w1biqdq2a'
down_revision = 'a5a91978daa5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('username', sa.String(
                        length=50), nullable=False),
                    sa.Column('latlng', Geometry(geometry_type='POINT',
                                                 dimension=2, srid=4326), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    )

    op.create_table('geo',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('latlng', ga.Geometry(geometry_type='POINT',
                                                    dimension=2, srid=4326), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    )
    op.create_index('latest_user_geo_idx', 'geo', [
                    sa.text('created_at DESC'), 'user_id', ], unique=False)

    op.create_table('locus',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    )

    op.create_table('locusNotify',
                    sa.Column('id', sa.Integer(),
                              autoincrement=True, nullable=False),
                    sa.Column('locus_id', sa.Integer(), nullable=False),
                    sa.Column('victim_user_id', sa.Integer(), nullable=False),
                    sa.Column('is_checked', sa.SmallInteger(),
                              default=0, nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['victim_user_id'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['locus_id'], ['locus.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('locusNotify')
    op.drop_table('locus')
    op.drop_table('geo')
    op.drop_table('user')
    # ### end Alembic commands ###
